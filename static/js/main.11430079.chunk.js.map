{"version":3,"sources":["components/Container/index.js","components/Header/styled.js","components/Header/index.js","components/Footer/index.js","components/Form/Result/styled.js","components/Form/Result/index.js","components/Form/Select/styled.js","components/Form/Input/styled.js","components/Form/Input/index.js","components/Form/Select/index.js","components/Form/Button/styled.js","components/Form/Button/index.js","components/Form/Clock/styled.js","components/Form/Clock/index.js","components/Form/Clock/useCurrentDate.js","useApiRates.js","components/Form/InformationLoader/styled.js","components/Form/InformationLoader/index.js","components/Form/styled.js","components/Form/index.js","App.js","reportWebVitals.js","GlobalStyle.js","theme.js","index.js"],"names":["Container","styled","div","theme","color","primary","StyledHeading","h1","Header","title","Footer","footer","TextResult","p","tertiary","Result","result","amount","currencyFrom","calculatedAmount","toFixed","currencyTo","Wrapper","StyledSelect","select","backgroundColor","field","accent","darkShadow","secondary","breakpoint","ipad","size","StyledArrow","span","boxArrow","arrow","Label","label","TextAmount","StyledInput","Input","setAmount","inputTypedAmount","ref","value","onChange","target","type","name","min","step","placeholder","required","as","Select","rates","Object","keys","map","StyledButton","button","active","Button","boxClock","TextDate","Clock","formattedDate","useState","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","weekday","day","month","hour","minute","second","useApiRates","status","ratesData","setRatesData","addressAPI","setTimeout","a","fetch","response","ok","Error","statusText","json","InformationLoader","rotate","keyframes","LoadingCircle","border","borderTop","LoadingText","InformationAPI","Fieldset","fieldset","greyShadow","image","url","fieldsetOverlay","StyledParagraph","Item","li","secondItem","css","lastItem","List","ul","StyledSpan","UpdateDate","Form","setCurrencyFrom","setCurrencyTo","setResult","useRef","onSubmit","event","preventDefault","rate","sourceRate","calculateResult","current","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","body","colorNames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11430079.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 550px;\n  padding: 0 20px 0 20px;\n  color: ${({ theme }) => theme.color.primary};\n`; ","import styled from 'styled-components';\n\nexport const StyledHeading = styled.h1`\n  padding-bottom: 10px;\n  font-size: 30px;\n  line-height: 1.5;\n  letter-spacing: 2px;\n  word-spacing: 4px;\n  text-align: center;\n`;","import { StyledHeading } from './styled';\n\nexport const Header = ({ title }) => (\n  <header>\n    <StyledHeading>\n      {title}\n    </StyledHeading>\n  </header>\n);","import styled from \"styled-components\";\n\nexport const Footer = styled.footer`\n  text-align: center;\n  padding: 30px;\n  font-size: 18px;\n`;","import styled from 'styled-components';\n\nexport const TextResult = styled.p`\n  padding-left: 20px;\n  font-size: 20px;\n  color: ${ ({ theme }) => theme.color.tertiary};\n`;","import { TextResult } from './styled';\n\nexport const Result = ({ result }) => (\n  <>\n    <TextResult> \n      cash in: {result?.amount} {result.currencyFrom}\n    </TextResult>\n    <TextResult> \n      cash out: {result.calculatedAmount ? result.calculatedAmount.toFixed(2) : \"\"} {result.currencyTo}\n    </TextResult>\n  </>\n);","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n   position: relative;\n`;\n\nexport const StyledSelect = styled.select`\n  padding: 8px 30px 8px 10px;\n  font-size: 16px;\n  letter-spacing: 2px;\n  background-color: ${({ theme }) => theme.backgroundColor.field};\n  box-shadow: 0 10px 20px ${({ theme }) => theme.accent.darkShadow};\n  border: none;\n  border-radius: 3px;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  -ms-appearance: none;\n  outline: none;\n  min-height: 35px;\n  width: 100%;\n  color: ${({ theme }) => theme.color.primary};\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.color.secondary};\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoint.ipad}px) {\n    padding: 15px;\n    font-size: 18px;\n  }\n  cursor: pointer; \n`;\n\nconst size = \"5px\";\n\nexport const StyledArrow = styled.span`\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 2rem;\n  background-color: ${({ theme }) => theme.accent.boxArrow};\n  pointer-events: none;\n  border-top-right-radius: 3px;\n  border-bottom-right-radius: 3px;\n\n  &::before,\n  &::after {\n    ${size};\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n  }\n\n  &::before {\n    border-left: ${size} solid transparent;\n    border-right: ${size} solid transparent;\n    border-top: ${size} solid ${({ theme }) => theme.accent.arrow};\n  }\n`;","import styled from 'styled-components';\nimport { StyledSelect } from '../Select/styled'\n\nexport const Label = styled.label`\n  margin-top: 120px;\n`;\n\nexport const TextAmount = styled.span`\n  display: inline-block;\n  padding: 8px;\n  margin-bottom: 5px;\n  font-size: 15px;\n  color: ${({ theme }) => theme.color.secondary};\n  letter-spacing: 1px;\n  word-spacing: 3px;\n  background-color: ${({ theme }) => theme.backgroundColor.label};\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const StyledInput = styled(StyledSelect)`  \n  &::placeholder {\n    color: ${({ theme }) => theme.color.primary};\n  }\n`;","import { \n  Label, \n  TextAmount, \n  Wrapper, \n  StyledInput,\n} from './styled';\n\nexport const Input = ({ amount, setAmount, inputTypedAmount, currencyFrom }) => (\n  <Label>\n    <TextAmount>\n      Amount in {currencyFrom}*:\n    </TextAmount>\n    <Wrapper>\n      <StyledInput\n        ref={inputTypedAmount}\n        value={amount}\n        onChange={({ target }) => setAmount(target.value)} \n        type=\"number\" \n        name=\"amount\" \n        min=\"0.01\" \n        step=\"0.01\" \n        placeholder=\"type here\" \n        required\n        as=\"input\"\n      />\n    </Wrapper>\n  </Label>\n);","import {\n  Wrapper,\n  StyledSelect,\n  StyledArrow,\n} from './styled';\n\nexport const Select = ({ rates, value, onChange }) => (\n  <Wrapper>\n    <StyledSelect \n      value={value}\n      onChange={({ target }) => onChange(target.value)}\n    >\n      {Object.keys(rates).map(value => \n        (\n          <option key={value} value={value}>\n            {value} \n          </option>\n        ))\n      }\n    </StyledSelect>\n    <StyledArrow />\n  </Wrapper>\n);","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: block;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  border: none;\n  color: ${({ theme }) => theme.color.primary};\n  background-color: ${({ theme }) => theme.button.backgroundColor};\n  box-shadow: 0 10px 20px ${({ theme }) => theme.accent.darkShadow};\n  letter-spacing: 1px;\n  outline: none;\n  border: 2px solid transparent;\n  cursor: pointer;\n  transition: all .3s ease-in-out;\n\n  &:hover {\n    transform: translateY(-1px);\n  }\n\n  &:focus {\n    border: 2px solid ${({ theme }) => theme.color.secondary};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.button.active};\n    transform: translateY(3px);\n  }\n`;","import { StyledButton } from './styled';\n\nexport const Button = ({ title }) => (\n  <StyledButton> \n    {title}\n  </StyledButton>\n);","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  margin: 50px 0 25px 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.backgroundColor.boxClock};\n  border-radius: 3px;\n`;\n\nexport const TextDate = styled.p`\n  padding: 8px 0 8px 0;\n  font-size: 20px;\n  color: ${({ theme }) => theme.color.secondary};\n  line-height: 1.8;\n  letter-spacing: 3px;\n  word-spacing: 2px;\n`;","import { useCurrentDate } from './useCurrentDate';\nimport { Wrapper, TextDate } from './styled';\n\nexport const Clock = () => {\n  const date = useCurrentDate();\n\n  const formattedDate = date.toLocaleString(undefined, {\n    weekday : \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  });\n\n  return (\n    <Wrapper>\n      <TextDate>\n        {formattedDate}\n      </TextDate>\n    </Wrapper>\n  );\n};","import { useState, useEffect } from 'react';\n\nexport const useCurrentDate = () => {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    const intervalId = setInterval(() => { \n      setDate(new Date());\n    }, 1_000);\n    \n    return () => clearInterval(intervalId);\n  }, []);\n\n  return date;\n};","import { useState, useEffect } from \"react\";\n\nexport const useApiRates = () => {\n  const [ratesData, setRatesData] = useState({\n    status: \"loading\",\n    date: null,\n    rates: null,\n  });\n\n  useEffect(() => {\n    const addressAPI = \"https://api.exchangerate.host/latest\";\n    const correctAddressAPI = \"https://api.exchangerate.host/latest\";\n\n    if (addressAPI !== correctAddressAPI) {\n      setRatesData({ status: \"error\" });\n    } else {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(addressAPI);\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          const { date, rates } = await response.json();\n          setRatesData({ date, rates, status: \"success\" });\n\n        } catch (error) {\n          setRatesData({ status: \"error\"});\n        }\n      };\n  \n      setTimeout(fetchData, 1_000);\n    }\n  }, []);\n  \n  return ratesData;\n};","import styled, { keyframes } from 'styled-components';\n\nexport const InformationLoader = styled.div` \n  width: 100%;\n  min-height: 500px;\n  padding: 20px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst rotate = keyframes` \n  from {\n    transform: none;\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoadingCircle = styled.div` \n  width: 40px;\n  height: 40px;\n  margin: 50px auto;\n  border: solid 4px ${({ theme }) => theme.accent.border};\n  border-top: solid 5px ${({ theme }) => theme.accent.borderTop};\n  border-radius: 50%;\n  animation: ${rotate} 1.5s linear infinite;\n`;\n\nexport const LoadingText = styled.p`\n  font-size: 25px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.color.primary};\n`;","import { useApiRates } from \"../../../useApiRates\";\nimport {\n  InformationLoader,\n  LoadingCircle,\n  LoadingText,\n} from './styled';\n\nexport const InformationAPI = () => {\n  const ratesData = useApiRates();\n  const status = ratesData.status;\n\n  return (\n    <InformationLoader>\n      {status === \"loading\" && \n        <> \n          <LoadingCircle /> \n          <LoadingText>\n            Updating data from the European Central Bank\n          </LoadingText> \n        </>\n      }\n      {status === \"error\" && \n        <LoadingText>\n          Something went wrong. \n          Please check your internet connection and try again later.\n        </LoadingText>\n      }\n    </InformationLoader>\n)};","import styled, { css } from 'styled-components';\n\nexport const Fieldset = styled.fieldset`\n  box-shadow: 6px 6px 19px 0px ${({ theme }) => theme.accent.greyShadow};\n  border-radius: 5px;\n  border: none;\n  background-image: url(${({ theme }) => theme.image.url});\n  background-position: left;\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: relative; \n  z-index: 30;\n\n  &::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: ${({ theme }) => theme.backgroundColor.fieldsetOverlay};\n    border-radius: 5px;\n    position: absolute;\n    z-index: -10;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  margin-bottom: 10px;\n  font-size: 15px;\n  font-weight: 600;\n  letter-spacing: 3px;\n  word-spacing: 2px;\n  color: ${({ theme }) => theme.color.tertiary};\n  background-color: ${({ theme }) => theme.backgroundColor.label};\n  max-width: 180px;\n  padding: 5px;\n`;\n\nexport const Item = styled.li`\n  ${ ({ secondItem }) => secondItem && css`\n    margin: 30px 0 30px;\n  `};\n\n  ${ ({ lastItem }) => lastItem && css`\n    display: flex;\n    align-items: left;\n    flex-direction: column;\n    width: 100%;\n    margin-top: 35px;\n    background-color: ${({ theme }) => theme.backgroundColor.label};\n  `}\n`;\n\nexport const List = styled.ul`\n  padding: 10px;\n  list-style: none;\n`;\n\nexport const StyledSpan = styled.span`\n  display: inline-block;\n  padding: 8px;\n  margin-bottom: 5px;\n  font-size: 15px;\n  color: ${({ theme }) => theme.color.secondary};\n  letter-spacing: 1px;\n  word-spacing: 3px;\n  background-color: ${({ theme }) => theme.backgroundColor.label};\n`;\n\nexport const UpdateDate = styled.p`\n  margin-top: 40px;\n  font-size: 15px;\n  text-align: right;\n  color: ${ ({ theme }) => theme.color.tertiary};\n`;","import { useState, useRef } from 'react';\nimport { Result } from './Result';\nimport { Input } from './Input';\nimport { Select } from './Select';\nimport { Button } from './Button'; \nimport { Clock } from './Clock';\nimport { useApiRates } from \"../../useApiRates\";\nimport { InformationAPI} from \"./InformationLoader\";\n\nimport {\n  Fieldset,\n  StyledParagraph,\n  List,\n  StyledSpan,\n  Item,\n  UpdateDate,\n} from './styled';\n\nexport const Form = () => {\n  const [amount, setAmount] = useState();\n  const [currencyFrom, setCurrencyFrom] = useState(\"GBP\");\n  const [currencyTo, setCurrencyTo] = useState(\"PLN\");\n  const [result, setResult] = useState({});\n\n  const ratesData = useApiRates();\n\n  const calculateResult = () => {\n    const rate = ratesData.rates[currencyFrom];\n    const sourceRate = ratesData.rates[currencyTo];\n\n    setResult({\n      amount,\n      calculatedAmount: +amount * sourceRate / rate,\n      currencyFrom,\n      currencyTo,\n    });\n  };\n\n  const inputTypedAmount = useRef();\n  \n  const clearInput = () => inputTypedAmount.current.value = \"\";\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    calculateResult();\n    clearInput();\n  };\n\n  return ratesData.status !== \"success\" ? <InformationAPI /> : (\n    <form onSubmit={onFormSubmit}>\n      <Fieldset>\n        <StyledParagraph>*fields required</StyledParagraph>\n        <Clock />\n        <List>\n          <Item>\n            <label>\n              <StyledSpan>Currency from*:</StyledSpan>\n              <Select\n                rates={ratesData.rates}\n                value={currencyFrom} \n                onChange={setCurrencyFrom} \n              />\n            </label>\n          </Item>\n          <Item secondItem>\n            <label>\n              <StyledSpan>Currency to*:</StyledSpan>\n              <Select \n                rates={ratesData.rates}\n                value={currencyTo} \n                onChange={setCurrencyTo} \n              />\n            </label>\n          </Item>\n          <Item>\n            <Input \n              setAmount={setAmount}\n              inputTypedAmount={inputTypedAmount}\n              currencyFrom={currencyFrom}\n            />\n          </Item>\n          <Item lastItem>\n            <Result \n              result={result} \n            />\n            \n          </Item>\n        </List>\n        <Button title=\"count amount\" />\n        <UpdateDate>Last update: {ratesData.date}</UpdateDate>\n      </Fieldset>\n    </form>\n  ); \n};","import { Container } from './components/Container';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { Form } from './components/Form';\n\nexport const App = () => (\n  <Container>\n    <Header title=\"Currency Converter\" />\n    <Form />\n    <Footer>\n    © 2021 | Coded by Szymon Rojek \n    </Footer>\n  </Container>\n);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n  }\n\n  *, ::after, ::before {\n    box-sizing: inherit;\n  }\n\n  body {\n    min-height: 100vh;\n    font-family: 'Antonio', sans-serif;\n    background-color: ${({ theme }) => theme.backgroundColor.body};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;","\nconst colorNames = {\n  blumine: \"#186889\",\n  astral: \"#2E86ABC4\",\n  tuna: \"#3b3c47\",\n  aliceBlue: \"#f0f9ff\",\n  trout: \"#4d5061c1\",\n  ziggurat: \"#BCD5E4\",\n  geyser: \"#CFDde3c3\",\n  ebb: \"rgba(255, 255, 255, 0.79)\",\n}\n\nexport const theme = {\n  color: {\n    primary: colorNames.ebb,\n    secondary: colorNames.blumine,\n    tertiary: colorNames.tuna,\n  },\n  backgroundColor: {\n    body: colorNames.astral,\n    fieldsetOverlay: colorNames.geyser,\n    label: colorNames.ziggurat,\n    field: colorNames.trout,\n    boxClock: colorNames.aliceBlue,\n  },\n  button: {\n    active: colorNames.tuna,\n    backgroundColor: colorNames.trout,\n  },\n  image: {\n    url: 'https://www.researchgate.net/profile/M-Basri/publication/320925728/figure/fig3/AS:631619933192230@1527601335529/India-GDP-Growth-Interest-Rate-Forex-Reserves-Exchange-Rates-and-Current-Account.png'\n  },\n  accent: {\n    boxArrow: colorNames.tuna,\n    arrow: colorNames.ebb,\n    border: colorNames.ebb,\n    borderTop: colorNames.blumine,\n    greyShadow: \"rgba(47, 50, 50, 0.54)\",\n    darkShadow: \"rgba(0, 0, 0, .5)\"\n  },\n  breakpoint: {\n    ipad: 768\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from './theme';\nimport { Normalize } from 'styled-normalize';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Normalize />\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}